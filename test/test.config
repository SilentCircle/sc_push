%%-*- mode: erlang -*-
%% ex: ft=erlang ts=4 sw=4

{services, [
        [
            {name, 'nullsvc'},
            {mod, 'sc_push_svc_null'},
            {description, "Null Push Service"},
            {sessions, [
                    [
                        {name, 'nullsvc-com.silentcircle.SCPushSUITETest--DEV'},
                        {mod, sc_push_svc_null_srv},
                        {config, []}
                    ]
                ]}
        ]
    ]
}.

{registration, [
        {service, nullsvc},
        {token, <<"null-token">>},
        {device_id, <<"test-device-id">>},
        {tag, <<"sc_push_SUITE@test">>},
        {app_id, <<"com.silentcircle.SCPushSUITETest">>},
        {dist, <<"dev">>}
    ]
}.

%% The test cases need to read this and replace
%% the mustache-style entries, e.g. "{{ error_log }}" before
%% setting lager's app environment. This is intended to support
%% using CommonTest's priv_dir().
{lager,
 [
  %% What handlers to install with what arguments
  {handlers, [
              {lager_console_backend, warning},
              {lager_file_backend, [
                                    {file, "{{ error_log_file }}"},
                                    {level, error},
                                    {size, 10485760},
                                    {date, "$D0"},
                                    {count, 5}
                                   ]
              },
              {lager_file_backend, [
                                    {file, "{{ console_log_file }}"},
                                    {level, info},
                                    {size, 10485760},
                                    {date, "$D0"},
                                    {count, 5}
                                   ]
              }
             ]
  },
  %% Whether to write a crash log, and where. Undefined means no crash logger.
  {crash_log, "{{ crash_log_file }}" }
 ]}.

%% Templating supports use of properties supplied by ct such as data_dir,
%% priv_dir, and so on.
{wm_config, [
    {ip, "0.0.0.0"},
    {port, 5678},
    {dispatch, "dispatch.conf"}
]}.

{databases,
 #{internal_db => #{db  => mnesia,
                    mod => sc_push_reg_db_mnesia},
   external_db => #{db  => postgres,
                    mod => sc_push_reg_db_postgres}
  }
}.

{connect_info,
 #{postgres => [
                {hostname, "localhost"},
                {database, "sc_push_lib_test"},
                {username, "sc_push_lib_test"},
                {password, "test"}
               ]
  }
}.

{sasl, [
        {sasl_error_logger, false}
       ]}.
